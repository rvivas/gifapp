{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","console","log","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2NAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,oCACA,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACnBC,QAAQC,IAAIH,GACNI,EAFa,mGAEqFC,UAAUL,IAF/F,SAGAM,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAiB,IAAhBrB,EAAe,EAAfA,SAAe,ECAZ,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACtB,IAEGuB,EDfyBK,CAAa5B,GAAhCe,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAErB,OACI,oCACI,gCAAMtB,EAAN,KACEsB,GAAW,sCACb,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEYbkB,EAzBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,cAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEIS,EAAWiB,KAAI,SAAAX,GAAQ,OACrB,kBAAC,EAAD,CACE6B,IAAK7B,EACLA,SAAUA,UCbxB+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.000a7eee.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(categories => [inputValue,...categories]);\n            setInputValue('');\n        }\n    }\n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category) => {\n    console.log(category)\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=YEvDfcHDyARrJE3515IkRrwYQGw43fU2&limit=10&q=${encodeURI(category)}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useFetchGifs} from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n//import {getGifs} from '../helpers/getGifs';\n\nexport const GifGrid = ({category }) => {\n\n    const {data: images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3> {category} </h3>\n            { loading && <p>Loaging</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem \n                        key={img.id}\n                        {...img}\n                        />\n                    ))\n                    }\n            </div>\n        </>\n    )\n}","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n\n    }, [category])\n\n    return state\n}","import React, {useState} from 'react';\n\nimport './index.css';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from '../src/components/GifGrid';\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['One Punch'])\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {\n          categories.map(category => (\n            <GifGrid\n              key={category}\n              category={category}\n            />\n          )\n          )\n        }\n      </ol>\n    </>\n  )\n}\n\n\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from '../src/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}